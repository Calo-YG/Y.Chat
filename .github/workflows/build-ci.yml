name: build_ci

on:
  push:
    branches: [wyg]
  pull_request:
    branches: [wyg]

jobs:
  build_host:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: login aliyun
        run: |
            sudo docker login --username=${{ secrets.ALINAME }} --password=${{ secrets.ALIPASSWORD }}  registry.cn-hongkong.aliyuncs.com
      - name: Build Docker Image
        run: |
          image_name="chat-web-host"
          tag_name="devhost"
          if docker images | grep $image_name:$tag_name > /dev/null; then
           docker rmi $image_name:$tag_name
          fi
          cd ./src/aspnetcore/Y.ChatCore
          sudo docker build -t $image_name:$tag_name -f Y.Chat.Host/Dockerfile .
      - name: Build and push ALI
        id: ALI_build
        run: |
          image_name="chat-web-host"
          tag_name="devhost"
          sudo docker tag  $image_name:$tag_name registry.cn-hongkong.aliyuncs.com/sdwyg/blogo:$tag_name
          sudo docker push registry.cn-hongkong.aliyuncs.com/sdwyg/blogo:$tag_name

  build_web:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: login aliyun
        run: |
            sudo docker login --username=${{ secrets.ALINAME }} --password=${{ secrets.ALIPASSWORD }}  registry.cn-hongkong.aliyuncs.com
      - name: Build Docker Image
        run: |
          image_name="chat-web-ui"
          tag_name="devui"
          if docker images | grep $image_name:$tag_name > /dev/null; then
           docker rmi $image_name:$tag_name
          fi
          cd ./src/web/Y.Chat.Web
          sudo docker build -t $image_name:$tag_name -f Dockerfile .

      - name: Build and push ALI
        id: ALI_build
        run: |
          image_name="chat-web-ui"
          tag_name="devui"
          sudo docker tag  $image_name:$tag_name registry.cn-hongkong.aliyuncs.com/sdwyg/blogo:$tag_name
          sudo docker push registry.cn-hongkong.aliyuncs.com/sdwyg/blogo:$tag_name
  
  deploy:
    runs-on: self-hosted
    needs: [build_web,build_host]
    steps:
      - name: login aliyun
        run: |
            sudo docker login --username=${{ secrets.ALINAME }} --password=${{ secrets.ALIPASSWORD }}  registry.cn-hongkong.aliyuncs.com  
      - name: checkout
        uses: actions/checkout@v2 
      - name: run docker compose
        run: |
            ls -l
            cd docker
            sudo docker login --username=${{ secrets.ALINAME }} --password=${{ secrets.ALIPASSWORD }}  registry.cn-hongkong.aliyuncs.com
            if  docker-compose -p chat_web_host ps > /dev/null 2>&1; then
              # 服务存在，停止并删除
              docker compose -f docker-compose.yml -p chat_web_host down
              echo "compose chat_web_host removed."
              sleep 10
            fi
            sudo docker compose -f docker-compose.yml -p chat_web_host pull && docker compose -f docker-compose.yml -p chat_web_host up -d